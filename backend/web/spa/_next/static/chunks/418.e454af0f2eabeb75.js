"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[418],{1418:(e,t,o)=>{o.d(t,{convertToRgb565Zip:()=>r});var a=o(4953),l=o(9311),n=o.n(l);async function i(e,t,o){var a,l,n,i,r,c;null===(a=o.onProgress)||void 0===a||a.call(o,0,"resizing"),null===(l=o.onLog)||void 0===l||l.call(o,"Starting video optimization...");let s=e=>{var t;let{progress:a}=e;null===(t=o.onProgress)||void 0===t||t.call(o,15*a,"resizing")},g=e=>{let{message:t}=e};e.on("progress",s),e.on("log",g);let f="scale=".concat(320,":").concat(240,":force_original_aspect_ratio=increase,crop=").concat(320,":").concat(240,",fps=").concat(25);await e.exec(["-i",t,"-vf",f,"-c:v","mpeg4","-q:v","8","-an","-y","optimized.mp4"]),e.off("progress",s),e.off("log",g),null===(n=o.onProgress)||void 0===n||n.call(o,15,"resizing"),null===(i=o.onLog)||void 0===i||i.call(o,"Video optimization complete");try{await e.deleteFile(t),null===(r=o.onLog)||void 0===r||r.call(o,"Deleted original ".concat(t," from MEMFS after optimization"))}catch(e){null===(c=o.onLog)||void 0===c||c.call(o,"Warning: Could not delete ".concat(t,": ").concat(e))}}async function r(e){var t,o,l,r,c,s,g,f,d,m,u,p,h,v,w,y;let b,F,_=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},E=arguments.length>2?arguments[2]:void 0,D="input_media";if(E)b=E;else{let t=await e.arrayBuffer(),o=Array.from(new Uint8Array(await crypto.subtle.digest("SHA-256",t))).map(e=>e.toString(16).padStart(2,"0")).join("").slice(0,16),a=e.name.replace(/\.[^.]+$/,"").replace(/\s+/g,"_").toLowerCase();b="".concat(a,"_").concat(o)}let B=e.type.startsWith("image/")||e.name.toLowerCase().match(/\.(jpg|jpeg|png|gif|bmp|webp)$/),L=new Uint8Array(await e.arrayBuffer()),U=null;if(B){let i=await (0,a.H)();await i.writeFile(D,L),null===(t=_.onProgress)||void 0===t||t.call(_,0,"converting");let r="output.raw";await i.exec(["-i",D,"-vf","scale=".concat(320,":").concat(240,":force_original_aspect_ratio=increase,crop=").concat(320,":").concat(240),"-f","rawvideo","-pix_fmt","rgb565be","-vframes","1",r]),U=await i.readFile(r),F=1,await i.deleteFile(r),null===(o=_.onProgress)||void 0===o||o.call(_,90,"converting");let c=new(n());c.file("frame_000001.rgb",U);let s={slug:b,original_filename:e.name,type:"image",width:320,height:240,frame_count:1,format:"rgb565",fps:0};if(c.file("metadata.json",JSON.stringify(s)),"function"==typeof i.exit)try{await i.exit()}catch(e){}return null===(l=_.onProgress)||void 0===l||l.call(_,100,"converting"),{slug:b,blob:await c.generateAsync({type:"blob"})}}{let t=await (0,a.H)();await t.writeFile(D,L),L=null,await i(t,D,_),null===(r=_.onProgress)||void 0===r||r.call(_,15,"converting"),null===(c=_.onLog)||void 0===c||c.call(_,"Starting frame extraction..."),t.on("log",e=>{var t;let{message:o}=e;null===(t=_.onLog)||void 0===t||t.call(_,o)});let o=new(n()),l="frame_%06d.rgb",E="optimized.mp4",B=0,U=0;for(;;){let e=0===B?["-i",E,"-frames:v","".concat(75),"-an","-threads","1","-c:v","rawvideo","-pix_fmt","rgb565be","-f","image2","-fps_mode","passthrough",l]:["-ss","".concat(B),"-i",E,"-frames:v","".concat(75),"-an","-threads","1","-c:v","rawvideo","-pix_fmt","rgb565be","-f","image2","-fps_mode","passthrough",l];try{await t.exec(e)}catch(e){if(!String(e||"").includes("Aborted"))throw e}let a=[];try{console.log("[DEBUG] Attempting to list files after FFmpeg exec...");let e=await t.listDir("/");console.log("[DEBUG] Raw fileList:",e),console.log("[DEBUG] Files found:",e.map(e=>{let t="string"==typeof e?e:e.name,o=/^frame_\d{6}\.rgb$/.test(t);return console.log('[DEBUG] File: "'.concat(t,'" matches regex: ').concat(o)),{name:t,matches:o}})),a=e.filter(e=>{let t="string"==typeof e?e:e.name;return/^frame_\d{6}\.rgb$/.test(t)}),console.log("[DEBUG] Filtered frameFiles:",a),null===(m=_.onLog)||void 0===m||m.call(_,"Found ".concat(e.length," total files: ").concat(e.map(e=>"string"==typeof e?e:e.name).join(", "))),null===(u=_.onLog)||void 0===u||u.call(_,"Found ".concat(a.length," frame files: ").concat(a.map(e=>"string"==typeof e?e:e.name).join(", ")))}catch(e){console.log("[DEBUG] listDir failed, trying alternative approach:",e),a=[]}if(0===a.length){console.log("[DEBUG] No frames found via listDir, trying aggressive fallback...");for(let e=1;e<=75;e++){let o="frame_".concat(e.toString().padStart(6,"0"),".rgb");try{let e=await t.readFile(o);e&&e.length>0&&(a.push(o),console.log("[DEBUG] Fallback found frame: ".concat(o," (").concat(e.length," bytes)")))}catch(e){break}}if(0===a.length)try{for(let e of(await t.listDir("/"))){let o="string"==typeof e?e:e.name;if(o.endsWith(".rgb"))try{let e=await t.readFile(o);e&&e.length>0&&(a.push(o),console.log("[DEBUG] Emergency fallback found: ".concat(o," (").concat(e.length," bytes)")))}catch(e){console.log("[DEBUG] Failed to read ".concat(o,":"),e)}}}catch(e){console.log("[DEBUG] Emergency fallback failed:",e)}console.log("[DEBUG] Total fallback frames found: ".concat(a.length)),null===(p=_.onLog)||void 0===p||p.call(_,"Fallback method found ".concat(a.length," frame files"))}if(0===a.length){if(0===U){try{let e=await t.listDir("/");console.error("[DEBUG] All files in MEMFS:",e),null===(v=_.onLog)||void 0===v||v.call(_,"CRITICAL: No frames found despite ".concat(e.length," files in MEMFS. Files: ").concat(e.map(e=>"string"==typeof e?e:e.name).join(", ")))}catch(e){console.error("[DEBUG] Failed to list all files:",e)}throw null===(h=_.onLog)||void 0===h||h.call(_,"First chunk failed - no frames found. Check debug logs above."),Error("FFmpeg could not extract frames - check console for detailed debugging info")}break}for(let e of(a.sort((e,t)=>{let o="string"==typeof e?e:e.name,a="string"==typeof t?t:t.name;return parseInt(o.match(/\d+/)[0])-parseInt(a.match(/\d+/)[0])}),a)){let a="string"==typeof e?e:e.name;console.log("[DEBUG] Processing frame file: ".concat(a));let l=await t.readFile(a);U++,o.file("frame_".concat(U.toString().padStart(6,"0"),".rgb"),l);try{await t.deleteFile(a)}catch(e){console.log("[DEBUG] Could not delete ".concat(a,":"),e)}}let n=15+(B+=3)/600*80;null===(d=_.onProgress)||void 0===d||d.call(_,Math.min(n,95),"converting")}if(0===(F=U))throw Error("No frames were successfully extracted from video. Video may be corrupted or in an unsupported format.");null===(s=_.onProgress)||void 0===s||s.call(_,95,"converting"),null===(g=_.onLog)||void 0===g||g.call(_,"Packaging frames...");let k={slug:b,original_filename:e.name,type:"video",width:320,height:240,frame_count:F,format:"rgb565",fps:25};o.file("metadata.json",JSON.stringify(k));let G=await o.generateAsync({type:"blob"});if(null===(f=_.onProgress)||void 0===f||f.call(_,100,"converting"),"function"==typeof t.exit)try{await t.exit(),null===(w=_.onLog)||void 0===w||w.call(_,"FFmpeg WASM heap released")}catch(e){null===(y=_.onLog)||void 0===y||y.call(_,"Warning: FFmpeg cleanup failed: ".concat(e))}return{slug:b,blob:G}}}},4953:(e,t,o)=>{o.d(t,{H:()=>r,I:()=>c});let a=null,l=null,n=null;async function i(){if(n)return n;let{FFmpeg:e}=await o.e(654).then(o.bind(o,5654));return n=e}async function r(){let e=new(await i());return await e.load({corePath:"/ffmpeg/umd/ffmpeg-core.js",log:!0}),e}async function c(){if(a){if(a.loaded)return a;if(l)return await l,a}let{FFmpeg:e}=await o.e(654).then(o.bind(o,5654));return l=(a=new e).load({corePath:"/ffmpeg/umd/ffmpeg-core.js",log:!0}),await l,l=null,console.info("[FFmpeg] Core ready"),a}}}]);