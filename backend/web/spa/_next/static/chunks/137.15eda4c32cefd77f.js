"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[137],{8137:(e,t,a)=>{a.d(t,{convertToRgb565Zip:()=>s});let o=null;async function l(){if(o)return o;let{FFmpeg:e}=await a.e(654).then(a.bind(a,5654));return o=e}async function n(){let e=new(await l());return await e.load({corePath:"/ffmpeg/umd/ffmpeg-core.js",log:!0}),e}var i=a(9311),r=a.n(i);async function c(e,t,a){var o,l,n,i,r,c;null===(o=a.onProgress)||void 0===o||o.call(a,0,"resizing"),null===(l=a.onLog)||void 0===l||l.call(a,"Starting video optimization...");let s=e=>{var t;let{progress:o}=e;null===(t=a.onProgress)||void 0===t||t.call(a,15*o,"resizing")},f=e=>{let{message:t}=e};e.on("progress",s),e.on("log",f);let g="scale=".concat(320,":").concat(240,":force_original_aspect_ratio=increase,crop=").concat(320,":").concat(240,",fps=").concat(25);await e.exec(["-i",t,"-vf",g,"-c:v","mpeg4","-q:v","8","-an","-y","optimized.mp4"]),e.off("progress",s),e.off("log",f),null===(n=a.onProgress)||void 0===n||n.call(a,15,"resizing"),null===(i=a.onLog)||void 0===i||i.call(a,"Video optimization complete");try{await e.deleteFile(t),null===(r=a.onLog)||void 0===r||r.call(a,"Deleted original ".concat(t," from MEMFS after optimization"))}catch(e){null===(c=a.onLog)||void 0===c||c.call(a,"Warning: Could not delete ".concat(t,": ").concat(e))}}async function s(e){var t,a,o,l,i,s,f,g,d,m,u,p,h,v,w,y,b,F,_;let E,D,U=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},L=arguments.length>2?arguments[2]:void 0,x="input_media";if(L)E=L;else{let t=await e.arrayBuffer(),a=Array.from(new Uint8Array(await crypto.subtle.digest("SHA-256",t))).map(e=>e.toString(16).padStart(2,"0")).join("").slice(0,16),o=e.name.replace(/\.[^.]+$/,"").replace(/\s+/g,"_").toLowerCase();E="".concat(o,"_").concat(a)}let k=e.type.startsWith("image/")||e.name.toLowerCase().match(/\.(jpg|jpeg|png|gif|bmp|webp)$/),B=new Uint8Array(await e.arrayBuffer());if(k){let l=await n();await l.writeFile(x,B),null===(t=U.onProgress)||void 0===t||t.call(U,0,"converting");let i="output.raw";await l.exec(["-i",x,"-vf","scale=".concat(320,":").concat(240,":force_original_aspect_ratio=increase,crop=").concat(320,":").concat(240),"-f","rawvideo","-pix_fmt","rgb565be","-vframes","1",i]);let c=await l.readFile(i);D=1,await l.deleteFile(i),null===(a=U.onProgress)||void 0===a||a.call(U,90,"converting");let s=new(r()),f=new Uint8Array(8+c.length),g=new DataView(f.buffer);g.setUint32(0,D,!1),g.setUint32(4,153600,!1),f.set(c,8),s.file("frames.bin",f);let d={slug:E,original_filename:e.name,type:"image",width:320,height:240,frame_count:D,format:"rgb565",fps:0};if(s.file("metadata.json",JSON.stringify(d)),"function"==typeof l.exit)try{await l.exit()}catch(e){}return null===(o=U.onProgress)||void 0===o||o.call(U,100,"converting"),{slug:E,blob:await s.generateAsync({type:"blob"})}}{let t=await n();await t.writeFile(x,B),B=null,await c(t,x,U),null===(l=U.onProgress)||void 0===l||l.call(U,15,"converting"),null===(i=U.onLog)||void 0===i||i.call(U,"Starting frame extraction..."),t.on("log",e=>{var t;let{message:a}=e;null===(t=U.onLog)||void 0===t||t.call(U,a)});let a=new(r()),o="frame_%06d.rgb",L="optimized.mp4";try{await t.exec(["-i",L,"-f","null","-"])}catch(e){null===(d=U.onLog)||void 0===d||d.call(U,"Optimized video info check completed (expected failure)")}try{await t.exec(["-i",L,"-vframes","1","-f","rawvideo","-pix_fmt","rgb565be","test_frame.rgb"]);let e=await t.readFile("test_frame.rgb");null===(m=U.onLog)||void 0===m||m.call(U,"✅ Single frame test successful: ".concat(e.length," bytes")),await t.deleteFile("test_frame.rgb")}catch(e){throw null===(u=U.onLog)||void 0===u||u.call(U,"❌ Single frame test failed: ".concat(e)),Error("Optimized video appears corrupted - cannot extract frames: ".concat(e))}let k=[],S=0,G=0;for(;;){let e=25*S,a=e+500-1,l=0===S?["-i",L,"-frames:v","".concat(500),"-an","-threads","1","-c:v","rawvideo","-pix_fmt","rgb565be","-f","image2","-fps_mode","passthrough",o]:["-i",L,"-vf","select='between(n,".concat(e,",").concat(a,")'"),"-fps_mode","passthrough","-an","-threads","1","-c:v","rawvideo","-pix_fmt","rgb565be","-f","image2","-start_number","".concat(e+1),o];try{await t.exec(l)}catch(e){if(!String(e||"").includes("Aborted"))throw e}let n=[];try{console.log("[DEBUG] Attempting to list files after FFmpeg exec...");let e=await t.listDir("/");console.log("[DEBUG] Raw fileList:",e),n=e.filter(e=>{let t="string"==typeof e?e:e.name;return/^frame_\d{6}\.rgb$/.test(t)}),console.log("[DEBUG] Filtered frameFiles:",n),null===(h=U.onLog)||void 0===h||h.call(U,"Found ".concat(e.length," total files: ").concat(e.map(e=>"string"==typeof e?e:e.name).join(", "))),null===(v=U.onLog)||void 0===v||v.call(U,"Found ".concat(n.length," frame files: ").concat(n.map(e=>"string"==typeof e?e:e.name).join(", ")))}catch(e){console.log("[DEBUG] listDir failed, trying alternative approach:",e),n=[]}if(0===n.length){console.log("[DEBUG] No frames found via listDir, trying aggressive fallback...");for(let e=1;e<=500;e++){let a="frame_".concat(e.toString().padStart(6,"0"),".rgb");try{let e=await t.readFile(a);e&&e.length>0&&(n.push(a),console.log("[DEBUG] Fallback found frame: ".concat(a," (").concat(e.length," bytes)")))}catch(e){break}}if(0===n.length)try{for(let e of(await t.listDir("/"))){let a="string"==typeof e?e:e.name;if(a.endsWith(".rgb"))try{let e=await t.readFile(a);e&&e.length>0&&(n.push(a),console.log("[DEBUG] Emergency fallback found: ".concat(a," (").concat(e.length," bytes)")))}catch(e){console.log("[DEBUG] Failed to read ".concat(a,":"),e)}}}catch(e){console.log("[DEBUG] Emergency fallback failed:",e)}console.log("[DEBUG] Total fallback frames found: ".concat(n.length)),null===(w=U.onLog)||void 0===w||w.call(U,"Fallback method found ".concat(n.length," frame files"))}if(0===n.length){if(0===G){try{let e=await t.listDir("/");console.error("[DEBUG] All files in MEMFS:",e),null===(b=U.onLog)||void 0===b||b.call(U,"CRITICAL: No frames found despite ".concat(e.length," files in MEMFS. Files: ").concat(e.map(e=>"string"==typeof e?e:e.name).join(", ")))}catch(e){console.error("[DEBUG] Failed to list all files:",e)}throw null===(y=U.onLog)||void 0===y||y.call(U,"First chunk failed - no frames found. Check debug logs above."),Error("FFmpeg could not extract frames - check console for detailed debugging info")}break}for(let e of(n.sort((e,t)=>{let a="string"==typeof e?e:e.name,o="string"==typeof t?t:t.name;return parseInt(a.match(/\d+/)[0])-parseInt(o.match(/\d+/)[0])}),n)){let a="string"==typeof e?e:e.name;console.log("[DEBUG] Processing frame file: ".concat(a));let o=await t.readFile(a);k.push(o),G++;try{await t.deleteFile(a)}catch(e){console.log("[DEBUG] Could not delete ".concat(a,":"),e)}}let i=15+(S+=20)/600*80;null===(p=U.onProgress)||void 0===p||p.call(U,Math.min(i,95),"converting")}if(0===(D=G))throw Error("No frames were successfully extracted from video. Video may be corrupted or in an unsupported format.");null===(s=U.onProgress)||void 0===s||s.call(U,95,"converting"),null===(f=U.onLog)||void 0===f||f.call(U,"Packaging frames into single binary file...");let A=new Uint8Array(8+153600*D),P=new DataView(A.buffer);P.setUint32(0,D,!1),P.setUint32(4,153600,!1);let z=8;for(let e of k)A.set(e,z),z+=e.length;a.file("frames.bin",A);let j={slug:E,original_filename:e.name,type:"video",width:320,height:240,frame_count:D,format:"rgb565",fps:25};a.file("metadata.json",JSON.stringify(j));let C=await a.generateAsync({type:"blob"});if(null===(g=U.onProgress)||void 0===g||g.call(U,100,"converting"),"function"==typeof t.exit)try{await t.exit(),null===(F=U.onLog)||void 0===F||F.call(U,"FFmpeg WASM heap released")}catch(e){null===(_=U.onLog)||void 0===_||_.call(U,"Warning: FFmpeg cleanup failed: ".concat(e))}return{slug:E,blob:C}}}}}]);