"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[137],{8137:(e,t,a)=>{a.d(t,{convertToRgb565Zip:()=>s});let o=null;async function l(){if(o)return o;let{FFmpeg:e}=await a.e(654).then(a.bind(a,5654));return o=e}async function n(){let e=new(await l());return await e.load({corePath:"/ffmpeg/umd/ffmpeg-core.js",log:!0}),e}var i=a(9311),r=a.n(i);async function c(e,t,a){var o,l,n,i,r,c;null===(o=a.onProgress)||void 0===o||o.call(a,0,"resizing"),null===(l=a.onLog)||void 0===l||l.call(a,"Starting video optimization...");let s=e=>{var t;let{progress:o}=e;null===(t=a.onProgress)||void 0===t||t.call(a,15*o,"resizing")},g=e=>{let{message:t}=e};e.on("progress",s),e.on("log",g);let f="scale=".concat(320,":").concat(240,":force_original_aspect_ratio=increase,crop=").concat(320,":").concat(240,",fps=").concat(25);await e.exec(["-i",t,"-vf",f,"-c:v","mpeg4","-q:v","8","-an","-y","optimized.mp4"]),e.off("progress",s),e.off("log",g),null===(n=a.onProgress)||void 0===n||n.call(a,15,"resizing"),null===(i=a.onLog)||void 0===i||i.call(a,"Video optimization complete");try{await e.deleteFile(t),null===(r=a.onLog)||void 0===r||r.call(a,"Deleted original ".concat(t," from MEMFS after optimization"))}catch(e){null===(c=a.onLog)||void 0===c||c.call(a,"Warning: Could not delete ".concat(t,": ").concat(e))}}async function s(e){var t,a,o,l,i,s,g,f,d,m,u,p,h,v,w,b;let y,F,_=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},E=arguments.length>2?arguments[2]:void 0,D="input_media";if(E)y=E;else{let t=await e.arrayBuffer(),a=Array.from(new Uint8Array(await crypto.subtle.digest("SHA-256",t))).map(e=>e.toString(16).padStart(2,"0")).join("").slice(0,16),o=e.name.replace(/\.[^.]+$/,"").replace(/\s+/g,"_").toLowerCase();y="".concat(o,"_").concat(a)}let B=e.type.startsWith("image/")||e.name.toLowerCase().match(/\.(jpg|jpeg|png|gif|bmp|webp)$/),L=new Uint8Array(await e.arrayBuffer()),U=null;if(B){let l=await n();await l.writeFile(D,L),null===(t=_.onProgress)||void 0===t||t.call(_,0,"converting");let i="output.raw";await l.exec(["-i",D,"-vf","scale=".concat(320,":").concat(240,":force_original_aspect_ratio=increase,crop=").concat(320,":").concat(240),"-f","rawvideo","-pix_fmt","rgb565be","-vframes","1",i]),U=await l.readFile(i),F=1,await l.deleteFile(i),null===(a=_.onProgress)||void 0===a||a.call(_,90,"converting");let c=new(r());c.file("frame_000001.rgb",U);let s={slug:y,original_filename:e.name,type:"image",width:320,height:240,frame_count:1,format:"rgb565",fps:0};if(c.file("metadata.json",JSON.stringify(s)),"function"==typeof l.exit)try{await l.exit()}catch(e){}return null===(o=_.onProgress)||void 0===o||o.call(_,100,"converting"),{slug:y,blob:await c.generateAsync({type:"blob"})}}{let t=await n();await t.writeFile(D,L),L=null,await c(t,D,_),null===(l=_.onProgress)||void 0===l||l.call(_,15,"converting"),null===(i=_.onLog)||void 0===i||i.call(_,"Starting frame extraction..."),t.on("log",e=>{var t;let{message:a}=e;null===(t=_.onLog)||void 0===t||t.call(_,a)});let a=new(r()),o="frame_%06d.rgb",E="optimized.mp4",B=0,U=0;for(;;){let e=0===B?["-i",E,"-frames:v","".concat(75),"-an","-threads","1","-c:v","rawvideo","-pix_fmt","rgb565be","-f","image2","-fps_mode","passthrough",o]:["-ss","".concat(B),"-i",E,"-frames:v","".concat(75),"-an","-threads","1","-c:v","rawvideo","-pix_fmt","rgb565be","-f","image2","-fps_mode","passthrough",o];try{await t.exec(e)}catch(e){if(!String(e||"").includes("Aborted"))throw e}let l=[];try{console.log("[DEBUG] Attempting to list files after FFmpeg exec...");let e=await t.listDir("/");console.log("[DEBUG] Raw fileList:",e),console.log("[DEBUG] Files found:",e.map(e=>{let t=e.name||e,a=/^frame_\d{6}\.rgb$/.test(t);return console.log('[DEBUG] File: "'.concat(t,'" matches regex: ').concat(a)),{name:t,matches:a}})),l=e.filter(e=>{let t=e.name||e;return/^frame_\d{6}\.rgb$/.test(t)}),console.log("[DEBUG] Filtered frameFiles:",l),null===(m=_.onLog)||void 0===m||m.call(_,"Found ".concat(e.length," total files: ").concat(e.map(e=>e.name||e).join(", "))),null===(u=_.onLog)||void 0===u||u.call(_,"Found ".concat(l.length," frame files: ").concat(l.map(e=>e.name||e).join(", ")))}catch(e){console.log("[DEBUG] listDir failed, trying alternative approach:",e),l=[]}if(0===l.length){console.log("[DEBUG] No frames found via listDir, trying aggressive fallback...");for(let e=1;e<=75;e++){let a="frame_".concat(e.toString().padStart(6,"0"),".rgb");try{let e=await t.readFile(a);e&&e.length>0&&(l.push(a),console.log("[DEBUG] Fallback found frame: ".concat(a," (").concat(e.length," bytes)")))}catch(e){break}}if(0===l.length)try{for(let e of(await t.listDir("/"))){let a=e.name||e;if(a.endsWith(".rgb"))try{let e=await t.readFile(a);e&&e.length>0&&(l.push(a),console.log("[DEBUG] Emergency fallback found: ".concat(a," (").concat(e.length," bytes)")))}catch(e){console.log("[DEBUG] Failed to read ".concat(a,":"),e)}}}catch(e){console.log("[DEBUG] Emergency fallback failed:",e)}console.log("[DEBUG] Total fallback frames found: ".concat(l.length)),null===(p=_.onLog)||void 0===p||p.call(_,"Fallback method found ".concat(l.length," frame files"))}if(0===l.length){if(0===U){try{let e=await t.listDir("/");console.error("[DEBUG] All files in MEMFS:",e),null===(v=_.onLog)||void 0===v||v.call(_,"CRITICAL: No frames found despite ".concat(e.length," files in MEMFS. Files: ").concat(e.map(e=>e.name||e).join(", ")))}catch(e){console.error("[DEBUG] Failed to list all files:",e)}throw null===(h=_.onLog)||void 0===h||h.call(_,"First chunk failed - no frames found. Check debug logs above."),Error("FFmpeg could not extract frames - check console for detailed debugging info")}break}for(let e of(l.sort((e,t)=>{let a="string"==typeof e?e:e.name,o="string"==typeof t?t:t.name;return parseInt(a.match(/\d+/)[0])-parseInt(o.match(/\d+/)[0])}),l)){let o="string"==typeof e?e:e.name;console.log("[DEBUG] Processing frame file: ".concat(o));let l=await t.readFile(o);U++,a.file("frame_".concat(U.toString().padStart(6,"0"),".rgb"),l);try{await t.deleteFile(o)}catch(e){console.log("[DEBUG] Could not delete ".concat(o,":"),e)}}let n=15+(B+=3)/600*80;null===(d=_.onProgress)||void 0===d||d.call(_,Math.min(n,95),"converting")}if(0===(F=U))throw Error("No frames were successfully extracted from video. Video may be corrupted or in an unsupported format.");null===(s=_.onProgress)||void 0===s||s.call(_,95,"converting"),null===(g=_.onLog)||void 0===g||g.call(_,"Packaging frames...");let k={slug:y,original_filename:e.name,type:"video",width:320,height:240,frame_count:F,format:"rgb565",fps:25};a.file("metadata.json",JSON.stringify(k));let G=await a.generateAsync({type:"blob"});if(null===(f=_.onProgress)||void 0===f||f.call(_,100,"converting"),"function"==typeof t.exit)try{await t.exit(),null===(w=_.onLog)||void 0===w||w.call(_,"FFmpeg WASM heap released")}catch(e){null===(b=_.onLog)||void 0===b||b.call(_,"Warning: FFmpeg cleanup failed: ".concat(e))}return{slug:y,blob:G}}}}}]);